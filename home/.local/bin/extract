#!/bin/sh

version()
{
    echo "${0##*/}: Multi-format archive extraction script (version 0.2)"
}

usage()
{
    cat <<EOF
Usage: ${0##*/} <options>... <archives>...

Options:
  -d, --dir=<DIR>     change to directory DIR before extracting
  -l, --list          list information about archive
  -h, --help          display help and exit
  -v, --version       display the version number and exit
EOF
}

invalid()
{
    echo "${0##*/}: Unknown option '$1'"
    echo "${0##*/}: Try '$0 --help' for more information."
}

extract()
{
    case "$1" in
        /*) file="$1" ;;
        *)  file="$PWD/$1" ;;
    esac

    if [ ! -f "$file" ]; then
        echo "${0##*/}: Error: $file is not a file."; return;
    fi

    mkdir -p "$2" || return
    cd "$2"       || return

    case $file in
        *.7z|*.wim|*.swm|*.esd|*.apk|*.apm|*.ar|*.a|*.deb|*.lib|*.arj|*.cb7|*.chm|*.chw|*.chi|*.chq|*.msi|*.msp|*.doc|*.xls|*.ppt|*.cramfs|*.dmg|*.ext|*.ext2|*.ext3|*.ext4|*.img|*.fat|*.hfs|*.hfsx|*.hxs|*.hxi|*.hxr|*.hxq|*.hxw|*.lit|*.ihex|*.iso|*.lzh|*.lha|*.mbr|*.mslz|*.mub|*.nsis|*.ntfs|*.rpm|*.ppmd|*.qcow|*.qcow2|*.qcow2c|*.001|*.udf|*.scap|*.uefif|*.vdi|*.vhd|*.vmdk|*.xar|*.pkg)
                                run 7z x l "$file" ;;
        *.zip|*.zipx|*.jar|*.xpi|*.odt|*.ods|*.docx|*.xlsx|*.epub|*.cbz)
                                run unzip "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.tar.bz2|*.tbz|*.tbz2) run tar xvjf tvjf "$file" ||
                                run 7z x l "$file" ;;
        *.tar.gz|*.tgz)         run tar xvzf tvzf "$file" ||
                                run 7z x l "$file" ;;
        *.tar.xz|*.txz)         run tar xvJf tvJf "$file" ||
                                run 7z x l "$file" ;;
        *.tar.Z|*.taz)          run tar xvZf tvZf "$file" ||
                                run 7z x l "$file" ;;
        *.tar.zst)              run tar xvf tvf -I zstd "$file" ;;
        *.arc)                  run arc e l "$file" ;;
        *.bz2|*.bzip2)          run bunzip2 "" -t "$file" ||
                                run 7z x l "$file" ;;
        *.ace|*.cba)            run unace x l "$file" ;;
        *.rar|*.r00|*.cbr)      run unrar x l -ad "$file" ||
                                run 7z x l "$file" ;;
        *.tar|*.cbt)            run tar xvf tvf "$file" ||
                                run 7z x l "$file" ;;
        *.cpio)                 run cpio -id -it < "$file" ||
                                run 7z x l "$file" ;;
        *.cso)                  list "${file%.*cso}.iso" ||
                                ciso 0 "$file" "${file%.*cso}.iso" ;;
        *.cab|*.exe)            run cabextract "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.gz|*.gzip)            run gunzip "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.lz)                   run lzip -d -l "$file" ;;
        *.lzma)                 run unlzma "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.squashfs)             run unsquashfs "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.xz)                   run unxz "" -l "$file" ||
                                run 7z x l "$file" ;;
        *.Z)                    list "${file%.*Z}" ||
                                uncompress "$file" ||
                                run 7z x l "$file" ;;
        *.zlib)                 list "${file%.*zlib}" ||
                                zlib-flate -uncompress < "$file" > "${file%.*zlib}" ;;
        *.zoo)                  run zoo x VC "$file" ;;
        *.zpaq)                 run zpaq x l  "$file" ;;
        *.zst)                  run zstd -d -l "$file" ;;
        *)
        mimetype=$(file --mime-type --brief --dereference "$file")

        case "${mimetype#*/}" in
            x-7z-compressed|x-7za-compressed) run 7z x l "$file" ;;
            x-archive|x-debian-package)       run 7z x l "$file" ;;
            x-arj)                            run 7z x l "$file" ;;
            x-bzip2)                          run bunzip2 "" -t "$file" ||
                                              run 7z x l "$file" ;;
            x-compress|x-gzip|gzip)           run gunzip "" -l "$file" ||
                                              run 7z x l "$file" ;;
            x-cpio)                           run cpio -id -it < "$file" ||
                                              run 7z x l "$file" ;;
            x-iso9660-image)                  run 7z x l "$file" ;;
            x-lha)                            run 7z x l "$file" ;;
            x-lzip)                           run lzip -d -l "$file" ;;
            x-rar)                            run unrar x l -ad "$file" ||
                                              run 7z x l "$file" ;;
            x-rpm)                            run 7z x l "$file" ;;
            x-tar)                            run tar xvf tvf "$file" ||
                                              run 7z x l "$file" ;;
            x-xz)                             run unxz "" -l "$file" ||
                                              run 7z x l "$file" ;;
            x-zip|zip)                        run unzip "" -l "$file" ||
                                              run 7z x l "$file" ;;
            x-zoo)                            run zoo x VC "$file" ;;
            *)                                run 7z x l "$file" ||
                                              echo "${0##*/}: $file: Unknown archive format: $mimetype" ;;
        esac
    esac

    cd - >/dev/null 2>&1 || return
}

list()
{
    if [ -n "$list" ]; then
        echo "$1"
        return 0
    fi

    return 1
}

run()
{
    cmd=$1
    arg=$2
    if [ -n "$list" ]; then
        arg=$3
    fi

    shift; shift; shift

    "$cmd" ${arg:+"$arg"} "$@"
}

list=
dir="$PWD"

while [ $# -gt 0 ]; do
    case $1 in
        -l|--list)     list=1;              shift ;;
        -d|--dir)      dir="$2";            shift; shift ;;
        -d=*|--dir=*)  dir="${1#*=}";       shift ;;
        -h|-\?|--help) usage;               exit 1 ;;
        -v|--version)  version;             exit 1 ;;
        -*)            invalid "$1";        exit 1 ;;
        *)             extract "$1" "$dir"; shift; extracted=1 ;;
    esac
done

if [ -z "$extracted" ]; then
    version; echo ""; usage; exit 1
fi