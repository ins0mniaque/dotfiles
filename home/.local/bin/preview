#!/bin/sh
#
# preview - Multi-format preview script

version()
{
    echo >&2 "${0##*/}: Multi-format preview script (version 0.5)"
}

usage()
{
    cat >&2 <<EOF
Usage: ${0##*/} <options>... <files>...

Options:
  -#, --header              show header
  -p, --padding=<PAD>       set header right padding to PAD columns
  -w, --width=<WIDTH>       set terminal width to WIDTH columns
  -h, --height=<HEIGHT>     set terminal height to HEIGHT lines
  -l, --length=<LENGTH>     limit output to LENGTH lines
  --tmux-popup              use tmux popup compatibility mode
  -?, --help                display help and exit
  -v, --version             display the version number and exit
EOF
}

invalid()
{
    echo >&2 "${0##*/}: Unknown option '$1'"
    echo >&2 "${0##*/}: Try '$0 --help' for more information."
}

preview()
{
    mimetype=$(file --mime-type --mime-encoding --brief --dereference "$1")

    if [ -n "$header" ]; then
        header "$1" "$mimetype"
    fi

    case $mimetype in
        inode/directory*)         preview_dir "$1" ;;
        image/*)                  preview_image "$1" ;;
        video/*)                  ffmpeg -i "$1" -vframes 1 -f image2 - 2> /dev/null | preview_image ;;
        application/vnd.sqlite3*) sqlite3 "$1" .schema | preview_code -l sql ;;
        *charset=binary)
            if archive=$(7z l "$1" 2> /dev/null); then
                echo "$archive" | sed '1,/^--/d'
            else
                hexyl ${length:+--length=$((length * 16))} "$1"
            fi
            ;;
        *)
            case $1 in
                *.md|*.MD) glow --style dark "$1" ;;
                *)         preview_code "$1" ;;
            esac
            ;;
    esac
}

preview_code()
{
    bat --style=numbers --color=always --terminal-width "$width" --wrap auto ${length:+--line-range :$length} "$@"
}

preview_dir()
{
    if command -v eza >/dev/null; then
        eza --all --long --git --color=always "${NERDFONT:+--icons=always}" "$@"
    else
        ls -al --color=always "$@"
    fi

    if log=$(git -C "$1" log --color=always -1 2> /dev/null); then
        separator
        echo "$log"
    fi
}

preview_image()
{
    if [ -n "$header" ]; then
        size="$width""x""$((height - 2))"
    else
        size="$width""x""$height"
    fi

    if [ -n "$tmux_popup" ]; then
        # Disable unsupported image protocols inside tmux popup
        chafa --format symbols --animate off --size "$size" "$@"
    else
        chafa --size "$size" "$@"
    fi
}

header()
{
    if command -v eza >/dev/null; then
        icons=${NERDFONT:+--icons=always}
        name="$(eza -d --color=always "$icons" "$1")"
    else
        icons=
        name="$(ls -d --color=always "$1")"
    fi

    if [ -z "$icons" ]; then
        case $2 in
            inode/directory*) name="📁 $name" ;;
            *)                name="📄 $name" ;;
        esac
    fi

    name="$name  $italic$yellow$(du -sh "$1" | cut -f1)$normal"
    info=

    colorless=$(echo "$name" | sed -e 's/\x1b\[[0-9;]*[mGKHF]//g' | sed 's/\x0f//g')
    remaining=$((width - ${#colorless} - padding))

    if [ $remaining -gt 2 ]; then
        info="  $(file --brief "$1")"

        if [ ${#info} -ge $remaining ]; then
            info="$(echo "$info" | LC_ALL=C cut -c1-$((remaining - 1)))…"
        else
            info=$(printf '%*s' "$((remaining - 2 - ${#info}))" '')$info
        fi
    fi

    echo "$name$italic$dim$info$normal"
    separator
}

separator()
{
    printf "$dim%*s$normal\n" "$width" '' | tr ' ' '―'
}

dim=$(tput dim)
italic=$(tput sitm)
normal=$(tput sgr0)
yellow=$(tput setaf 3)

header=
padding=${FZF_PREVIEW_COLUMNS:+8}
width=${FZF_PREVIEW_COLUMNS:-${COLUMNS:-$(tput cols)}}
height=${FZF_PREVIEW_LINES:-${LINES:-$(tput lines)}}
length=512
tmux_popup=

if [ -z "$FZF_PREVIEW_LINES" ]; then
    height=$((height - 1))
fi

while [ $# -gt 0 ]; do
    case $1 in
        -#|--header)      header=1;          shift ;;
        -p|--padding)     padding="$2";      shift; shift ;;
        -p=*|--padding=*) padding="${1#*=}"; shift ;;
        -w|--width)       width="$2";        shift; shift ;;
        -w=*|--width=*)   width="${1#*=}";   shift ;;
        -h|--height)      height="$2";       shift; shift ;;
        -h=*|--height=*)  height="${1#*=}";  shift ;;
        -l|--length)      length="$2";       shift; shift ;;
        -l=*|--length=*)  length="${1#*=}";  shift ;;
        --tmux-popup)     tmux_popup=1;      shift ;;
        -\?|--help)       usage;             exit 1 ;;
        -v|--version)     version;           exit 1 ;;
        -*)               invalid "$1";      exit 1 ;;
        *)                preview "$1";      shift; previewed=1 ;;
    esac
done

if [ -z "$previewed" ]; then
    version; echo >&2; usage; exit 1
fi