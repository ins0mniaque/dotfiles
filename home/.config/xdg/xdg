#!/bin/sh

# XDG Base Directory Specification
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
#
# POSIX-compliant shells
# • Link ~/.profile to this file
# bash
# • Link ~/.bashrc to this file
# zsh
# • Link ~/.zshenv to this file
# • Add the following lines to $XDG_CONFIG_HOME/zsh/.zshrc:
#       # Configure zsh autocompletion cache to XDG specification
#       autoload -U compinit
#       compinit -d "$ZCACHEDIR/zcompdump-$ZSH_VERSION"
#       zstyle ':completion:*' cache-path "$ZCACHEDIR"/zcompcache
# macOS
# • Add the following to ~/Library/LaunchAgents/xdg.plist (replacing $0 with the absolute path to this file):
#       <?xml version="1.0" encoding="UTF-8"?>
#       <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
#       <plist version="1.0">
#       <dict>
#         <key>Label</key>
#         <string>xdg</string>
#         <key>ProgramArguments</key>
#         <array>
#           <string>$0</string>
#           <string>launchctl<string>
#         </array>
#         <key>RunAtLoad</key>
#         <true/>
#       </dict>
#       </plist>

# Configure environment access

if [[ "$1" == "launchctl" ]]; then
    setenv() {
        launchctl setenv "$1" "$2"
    }
else
    setenv() {
        export "$1"="$2"
    }
fi

# Configure XDG base directories

XDG_CACHE_HOME=${XDG_CACHE_HOME:=~/.cache}
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=~/.config}
XDG_DATA_HOME=${XDG_DATA_HOME:=~/.local/share}
XDG_STATE_HOME=${XDG_STATE_HOME:=~/.local/state}

[ -z "$XDG_RUNTIME_DIR" ] && [ -d "/run/user/${UID:=$(id -u)}" ] && XDG_RUNTIME_DIR="/run/user/$UID"
[ -z "$XDG_RUNTIME_DIR" ] && XDG_RUNTIME_TMPDIR=${TMPDIR-/tmp} && XDG_RUNTIME_DIR=${XDG_RUNTIME_TMPDIR%/}/runtime-user-$UID
[ -d "$XDG_RUNTIME_DIR" ] || mkdir -m 0700 -p "$XDG_RUNTIME_DIR"

setenv XDG_CONFIG_HOME $XDG_CONFIG_HOME
setenv XDG_CACHE_HOME  $XDG_CACHE_HOME
setenv XDG_DATA_HOME   $XDG_DATA_HOME
setenv XDG_STATE_HOME  $XDG_STATE_HOME
setenv XDG_RUNTIME_DIR $XDG_RUNTIME_DIR

# Configure local bin/lib to XDG specification

setenv PATH "$PATH:$HOME/.local/bin"
setenv LD_LIBRARY_PATH "$LD_LIBRARY_PATH:$HOME/.local/lib"

# Configure applications to XDG specification

    # Android
    setenv ANDROID_USER_HOME "$XDG_DATA_HOME"/android
    alias adb='HOME="$XDG_DATA_HOME"/android adb'

    # Docker
    setenv DOCKER_CONFIG "$XDG_CONFIG_HOME"/docker

    # Go
    setenv GOPATH "$XDG_DATA_HOME"/go

    # Java
    setenv _JAVA_OPTIONS -Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java

    # less
    setenv LESSKEY "$XDG_CONFIG_HOME"/less/keys
    setenv LESSHISTFILE "$XDG_STATE_HOME"/less/history

    # .NET
    setenv DOTNET_CLI_HOME "$XDG_DATA_HOME"/dotnet

    # npm
    setenv NPM_CONFIG_INIT_MODULE "$XDG_CONFIG_HOME"/npm/config/npm-init.js
    setenv NPM_CONFIG_CACHE "$XDG_CACHE_HOME"/npm
    setenv NPM_CONFIG_TMP "$XDG_RUNTIME_DIR"/npm

    # NuGet
    setenv NUGET_PACKAGES "$XDG_DATA_HOME"/nuget/packages

    # OmniSharp
    setenv OMNISHARPHOME "$XDG_CONFIG_HOME"/omnisharp

    # OpenSSL
    setenv RANDFILE "$XDG_DATA_HOME"/openssl/rnd

    # ripgrep
    setenv RIPGREP_CONFIG_PATH "$XDG_CONFIG_HOME"/ripgrep/config

    # Rust
    setenv CARGO_HOME "$XDG_DATA_HOME"/cargo
    setenv RUSTUP_HOME "$XDG_DATA_HOME"/rustup
    setenv PATH "$CARGO_HOME/bin:$PATH"

    # Sage
    setenv DOT_SAGE "$XDG_DATA_HOME"/sage
    setenv SAGE_STARTUP_FILE "$XDG_CONFIG_HOME"/sage/init.sage

    # terminfo
    setenv TERMINFO "$XDG_DATA_HOME"/terminfo
    setenv TERMINFO_DIRS "$TERMINFO_DIRS":"$XDG_DATA_HOME"/terminfo

    # w3m
    setenv W3M_DIR "$XDG_DATA_HOME"/w3m

    # wget
    alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"

    # zoxide
    setenv _ZO_DATA_DIR "$XDG_DATA_HOME"/zoxide

# Configure bash to XDG specification

if [ -n "$BASH_VERSION" ]; then

    # Disable macOS Save/Restore Shell State
    export SHELL_SESSIONS_DISABLE=1

    BASH_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}/bash
    BASH_STATE_HOME=${XDG_STATE_HOME:-$HOME/.local/state}/bash

    [ ! -d "$BASH_STATE_HOME" ] && mkdir -p "$BASH_STATE_HOME"

    export HISTFILE="$BASH_STATE_HOME"/history

    # Source .profile
    [ "${BASH_SOURCE##*/}" = ".profile" ] && [ -f "$BASH_CONFIG_HOME"/profile ] && . "$BASH_CONFIG_HOME"/profile

    # Source .bashrc
    [ "${BASH_SOURCE##*/}" = ".bashrc" ] && [ -f "$BASH_CONFIG_HOME"/bashrc ] && . "$BASH_CONFIG_HOME"/bashrc

    unset BASH_CONFIG_HOME
    unset BASH_STATE_HOME

fi

# Configure zsh to XDG specification

if [ -n "$ZSH_VERSION" ]; then

    # Disable macOS Save/Restore Shell State
    export SHELL_SESSIONS_DISABLE=1

    ZDOTDIR=${ZDOTDIR:-$XDG_CONFIG_HOME/zsh}
    ZCACHEDIR=${ZCACHEDIR:-$XDG_CACHE_HOME/zsh}
    ZDATADIR=${ZDATADIR:-$XDG_DATA_HOME/zsh}
    ZSTATEDIR=${ZSTATEDIR:-$XDG_STATE_HOME/zsh}
    HISTFILE="$ZSTATEDIR"/history

    [ ! -d "$ZCACHEDIR/zcompdump-$ZSH_VERSION" ] && mkdir -p "$ZCACHEDIR/zcompdump-$ZSH_VERSION"
    [ ! -d "$ZDATADIR"  ] && mkdir -p "$ZDATADIR"
    [ ! -d "$ZSTATEDIR" ] && mkdir -p "$ZSTATEDIR"

    export ZDOTDIR ZCACHEDIR ZDATADIR ZSTATEDIR HISTFILE

    fpath=($fpath $ZDOTDIR/functions)

    ZSH_SOURCE="${(%):-%N}"

    # Source .zshenv
    [ "${ZSH_SOURCE##*/}" = ".zshenv" ] && [ -f "$ZDOTDIR"/.zshenv ] && . "$ZDOTDIR"/.zshenv

fi