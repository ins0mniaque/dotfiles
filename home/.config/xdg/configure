# XDG Base Directory Specification
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
#
# POSIX-compliant shells
# • Link ~/.profile to this file
# bash
# • Link ~/.bashrc to this file
# zsh
# • Link ~/.zshenv to this file
# • Add the following lines to $XDG_CONFIG_HOME/zsh/.zshrc:
#       # Configure zsh autocompletion cache to XDG specification
#       autoload -U compinit
#       compinit -d "$ZCACHEDIR/zcompdump-$ZSH_VERSION"
#       zstyle ':completion:*' cache-path "$ZCACHEDIR"/zcompcache

# Configure XDG base directories

XDG_CACHE_HOME=${XDG_CACHE_HOME:=~/.cache}
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=~/.config}
XDG_DATA_HOME=${XDG_DATA_HOME:=~/.local/share}
XDG_STATE_HOME=${XDG_STATE_HOME:=~/.local/state}

[ -z "$XDG_RUNTIME_DIR" ] && [ -d "/run/user/${UID:=$(id -u)}" ] && XDG_RUNTIME_DIR="/run/user/$UID"
[ -z "$XDG_RUNTIME_DIR" ] && XDG_RUNTIME_TMPDIR=${TMPDIR-/tmp} && XDG_RUNTIME_DIR=${XDG_RUNTIME_TMPDIR%/}/runtime-user-$UID
[ -d "$XDG_RUNTIME_DIR" ] || mkdir -m 0700 -p "$XDG_RUNTIME_DIR"

export XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME XDG_STATE_HOME XDG_RUNTIME_DIR

# Configure local bin/lib to XDG specification

export PATH="$PATH:$HOME/.local/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/.local/lib"

# Configure applications to XDG specification

    # Android
    export ANDROID_USER_HOME="$XDG_DATA_HOME"/android

    # Docker
    export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker

    # Go
    export GOPATH="$XDG_DATA_HOME"/go

    # Java
    export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java

    # less
    export LESSKEY="$XDG_CONFIG_HOME"/less/keys
    export LESSHISTFILE="$XDG_STATE_HOME"/less/history

    # .NET
    export DOTNET_CLI_HOME="$XDG_DATA_HOME"/dotnet

    # NuGet
    export NUGET_PACKAGES="$XDG_DATA_HOME"/nuget/packages

    # OmniSharp
    export OMNISHARPHOME="$XDG_CONFIG_HOME"/omnisharp

    # OpenSSL
    export RANDFILE="$XDG_DATA_HOME"/openssl/rnd

    # ripgrep
    export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME"/ripgrep/config

    # Rust
    export CARGO_HOME="$XDG_DATA_HOME"/cargo
    export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
    export PATH="$CARGO_HOME/bin:$PATH"

    # Sage
    export DOT_SAGE="$XDG_DATA_HOME"/sage
    export SAGE_STARTUP_FILE="$XDG_CONFIG_HOME"/sage/init.sage

    # terminfo
    export TERMINFO="$XDG_DATA_HOME"/terminfo
    export TERMINFO_DIRS="$TERMINFO_DIRS":"$XDG_DATA_HOME"/terminfo

    # w3m
    export W3M_DIR="$XDG_DATA_HOME"/w3m

# Configure bash to XDG specification

if [ -n "$BASH_VERSION" ]; then

    BASH_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}/bash
    BASH_STATE_HOME=${XDG_STATE_HOME:-$HOME/.local/state}/bash

    [ ! -d "$BASH_STATE_HOME" ] && mkdir -p "$BASH_STATE_HOME"

    export HISTFILE="$BASH_STATE_HOME"/history

    # Source .profile
    [ "${BASH_SOURCE##*/}" = ".profile" ] && [ -f "$BASH_CONFIG_HOME"/profile ] && . "$BASH_CONFIG_HOME"/profile

    # Source .bashrc
    [ "${BASH_SOURCE##*/}" = ".bashrc" ] && [ -f "$BASH_CONFIG_HOME"/bashrc ] && . "$BASH_CONFIG_HOME"/bashrc

    unset BASH_CONFIG_HOME
    unset BASH_STATE_HOME

fi

# Configure zsh to XDG specification

if [ -n "$ZSH_VERSION" ]; then

    ZDOTDIR=${ZDOTDIR:-$XDG_CONFIG_HOME/zsh}
    ZCACHEDIR=${ZCACHEDIR:-$XDG_CACHE_HOME/zsh}
    ZDATADIR=${ZDATADIR:-$XDG_DATA_HOME/zsh}
    ZSTATEDIR=${ZSTATEDIR:-$XDG_STATE_HOME/zsh}
    HISTFILE="$ZSTATEDIR"/history

    [ ! -d "$ZCACHEDIR/zcompdump-$ZSH_VERSION" ] && mkdir -p "$ZCACHEDIR/zcompdump-$ZSH_VERSION"
    [ ! -d "$ZDATADIR"  ] && mkdir -p "$ZDATADIR"
    [ ! -d "$ZSTATEDIR" ] && mkdir -p "$ZSTATEDIR"

    export ZDOTDIR ZCACHEDIR ZDATADIR ZSTATEDIR HISTFILE

    fpath=($fpath $ZDOTDIR/functions)

    ZSH_SOURCE="${(%):-%N}"

    # Source .zshenv
    [ "${ZSH_SOURCE##*/}" = ".zshenv" ] && [ -f "$ZDOTDIR"/.zshenv ] && . "$ZDOTDIR"/.zshenv

fi